# Shared location blocks for HTTP and HTTPS
# Handle preflight OPTIONS requests
location ~ ^/(users|orders|payments) {
    if ($request_method = 'OPTIONS') {
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, PATCH, OPTIONS";
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
        add_header Access-Control-Max-Age 1728000;
        add_header Content-Type "text/plain; charset=utf-8";
        add_header Content-Length 0;
        return 204;
    }
}

# Health check endpoint
location /health {
    return 200 '{"status": "healthy", "service": "nginx-gateway"}';
    add_header Content-Type application/json;
}

# User Service routes
location /users {
    limit_req zone=api burst=20 nodelay;
    proxy_pass http://user-service;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_connect_timeout 30s;
    proxy_send_timeout 30s;
    proxy_read_timeout 30s;
}

# Order Service routes
location /orders {
    limit_req zone=api burst=20 nodelay;
    proxy_pass http://order-service;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_connect_timeout 30s;
    proxy_send_timeout 30s;
    proxy_read_timeout 30s;
}

# Payment Service routes
location /payments {
    limit_req zone=api burst=20 nodelay;
    proxy_pass http://payment-service;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_connect_timeout 30s;
    proxy_send_timeout 30s;
    proxy_read_timeout 30s;
}

# API Documentation routes
location /docs {
    return 301 /users/docs;
}

location /user-docs {
    proxy_pass http://user-service/docs;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
}

# OpenAPI JSON files for documentation
location = /openapi.json {
    proxy_pass http://user-service/openapi.json;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
}

location /order-docs {
    proxy_pass http://order-service/docs;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # Custom OpenAPI URL for order service docs
    sub_filter '"url":"/openapi.json"' '"url":"/order-openapi.json"';
    sub_filter_once off;
}

location /order-openapi.json {
    proxy_pass http://order-service/openapi.json;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
}

location /payment-docs {
    proxy_pass http://payment-service/docs;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # Custom OpenAPI URL for payment service docs
    sub_filter '"url":"/openapi.json"' '"url":"/payment-openapi.json"';
    sub_filter_once off;
}

location /payment-openapi.json {
    proxy_pass http://payment-service/openapi.json;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
}


# Metrics endpoints (protected)
location /metrics {
    deny all;
    return 403 '{"error": "Forbidden", "message": "Metrics access denied"}';
    add_header Content-Type application/json;
}

# Catch-all route - API information (must be last)
location / {
    return 200 '{"message": "FastAPI Microservices Gateway", "services": {"users": "/users", "orders": "/orders", "payments": "/payments"}, "docs": {"users": "/user-docs", "orders": "/order-docs", "payments": "/payment-docs"}}';
    add_header Content-Type application/json;
}

# Error pages
error_page 404 /404.json;
error_page 500 502 503 504 /50x.json;

location = /404.json {
    return 404 '{"error": "Not Found", "message": "The requested resource was not found"}';
    add_header Content-Type application/json;
}

location = /50x.json {
    return 500 '{"error": "Internal Server Error", "message": "Something went wrong"}';
    add_header Content-Type application/json;
}
